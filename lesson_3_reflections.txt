When would you want to use a remote repository rather than keeping all your work
local?

A remote repository would be used when the project is to be shared with others and for having
an accessible working version.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

The main reason is that it gives the programmer confidence that there are not breaking changes 
or bugs in the version that is currently being worked on.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Forks are a version of someone else's repository which the programmer wants to elaborate on, giving
credit to the original developer for their contributions. Forks are used if the developer does
not have permission to change the forked project's original version. A clone is analogous to a fork,
but with the added benefit of being able to modify the original version. A branch is a separate version
of the current fork or cloned project that is currently being worked on. A branch should be used to
further develop a project. A clone should be used if the developer has permission to modify the
original version. A fork should be used to create a separate project that uses another developer's
code as a starting point, giving credit to the original developer.

What is the benefit of having a copy of the last known state of the remote
stored locally?

The benefit of having the last known state of the remote is that git will be able to know if the
local copy is out of sync with the master. 

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

I would probably use a shared folder of some sort and invite other programmers to edit that folder.
Git definitely seems easier, though.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

I would make changes in a separate branch if I was not sure if the changes I was making were going 
to break the project. I would also use a separate branch when adding a new feature or a major
change to the project. I would work on the master only if it was a personal project.
